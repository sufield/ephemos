name: Bazel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sunday at 3 AM UTC
    - cron: '0 3 * * 0'

permissions:
  contents: read
  actions: read

env:
  # Use Bazel 7.x compatible version
  BAZEL_VERSION: '7.4.1'

jobs:
  bazel-build-test:
    name: Bazel Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Clear Bazel caches to avoid compatibility issues
      run: |
        echo "üßπ Clearing any existing Bazel caches..."
        rm -rf ~/.cache/bazel ~/.cache/bazelisk || true
        echo "‚úÖ Bazel caches cleared"

    - name: Setup Bazelisk
      run: |
        sudo curl -L https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64 -o /usr/local/bin/bazel
        sudo chmod +x /usr/local/bin/bazel
        
    - name: Verify Bazel installation
      run: |
        bazel version
        echo "Bazel installation verified"
        
    - name: Clean workspace state
      run: |
        echo "üßπ Cleaning any existing Bazel workspace state..."
        bazel clean --expunge || echo "No workspace to clean"
        bazel shutdown || echo "No Bazel server to shutdown"
        
        # Remove any local Bazel state directories
        rm -rf bazel-* .bazel-* || true
        echo "‚úÖ Workspace state cleaned"

    - name: Validate Bazel configuration
      run: |
        echo "üîç Validating Bazel configuration..."
        bazel info
        bazel query //... --output=label_kind | head -10
        echo "‚úÖ Bazel configuration validated"
        
    - name: Build all targets
      run: |
        echo "üî® Building all Bazel targets..."
        bazel build //... --config=ci
        echo "‚úÖ All targets built successfully"
        
    - name: Run tests
      run: |
        echo "üß™ Running Bazel tests..."
        bazel test //... --config=ci --test_output=errors
        echo "‚úÖ All tests passed"
        
    - name: Build examples
      run: |
        echo "üöÄ Building example applications..."
        bazel build //examples/echo-server:echo-server --config=ci
        bazel build //examples/echo-client:echo-client --config=ci
        bazel build //cmd/ephemos-cli:ephemos-cli --config=ci
        echo "‚úÖ Examples built successfully"
        
    - name: Verify binary outputs
      run: |
        echo "üîç Verifying built binaries..."
        ls -la bazel-bin/examples/echo-server/
        ls -la bazel-bin/examples/echo-client/  
        ls -la bazel-bin/cmd/ephemos-cli/
        
        # Test that binaries can show help
        ./bazel-bin/cmd/ephemos-cli/ephemos-cli_/ephemos-cli --help || echo "CLI help not available"
        echo "‚úÖ Binary verification complete"
        
    - name: Final cleanup
      run: |
        echo "üßπ Final cleanup..."
        bazel shutdown
        rm -rf ~/.cache/bazel ~/.cache/bazelisk || true
        echo "‚úÖ Cleanup complete"
      if: always()