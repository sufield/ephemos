name: 'Setup Go Environment'
description: 'Setup Go with caching and version verification'
inputs:
  go-version:
    description: 'Go version to install'
    required: false
    default: '1.24.x'
  verify-version:
    description: 'Whether to verify the Go version matches expected'
    required: false
    default: 'true'
runs:
  using: 'composite'
  steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}
        check-latest: true
    
    - name: Verify Go installation
      shell: bash
      run: |
        echo "üîç Verifying Go installation..."
        echo "Go version: $(go version)"
        echo "GOROOT: $(go env GOROOT)"
        echo "GOPATH: $(go env GOPATH)"
        
        # Verify key stdlib packages exist
        go list std | grep -E "^(context|crypto)$" || (echo "‚ùå Standard library packages missing" && exit 1)
        echo "‚úÖ Go installation verified"
    
    - name: Clean conflicting cache directories before restore
      shell: bash
      run: |
        echo "üßπ Cleaning potential conflicting cache directories..."
        # Clean cache directories that might conflict with cache restoration
        rm -rf ~/.cache/go-build || true
        rm -rf ~/go/pkg/mod || true
        # Create directories to ensure proper permissions
        mkdir -p ~/.cache/go-build
        mkdir -p ~/go/pkg
        echo "‚úÖ Cache directories cleaned and prepared"
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ inputs.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ inputs.go-version }}-
          ${{ runner.os }}-go-
        
    - name: Clear Go build caches (preserve modules)
      shell: bash
      run: |
        echo "üßπ Clearing Go build and test caches (preserving modules)..."
        go clean -cache || true
        go clean -testcache || true
        # NOTE: Not clearing modcache to preserve downloaded modules
        echo "‚úÖ Go build caches cleared (modules preserved)"
        
    - name: Verify Go version
      if: ${{ inputs.verify-version == 'true' }}
      shell: bash
      run: |
        echo "Expected Go version: ${GO_VERSION}"
        echo "Actual Go version: $(go version)"
        go version | grep -E "(go1\.24)" || (echo "ERROR: Go version is not 1.24" && exit 1)
      env:
        GO_VERSION: ${{ inputs.go-version }}
          
    - name: Download dependencies
      shell: bash
      run: go mod download