# Gitleaks configuration for Ephemos
# Detects secrets, API keys, tokens, and other sensitive data

title = "Ephemos Security Scanning Configuration"

[extend]
# Use default gitleaks rules as base
useDefault = true

[[rules]]
id = "ephemos-spiffe-production"
description = "Production SPIFFE endpoints in config files"
regex = '''spiffe://[a-zA-Z0-9.-]+\.(com|net|org|io)/'''
keywords = ["spiffe://"]
paths = ["config/*.yaml", "config/*.yml"]
# Allow example.org domains in demo configs
allowlist.regexes = ['''spiffe://example\.org/''']

[[rules]]
id = "ephemos-real-domains"
description = "Real production domains in config files"
regex = '''[a-zA-Z0-9.-]+\.(com|net|org|io)'''
keywords = ["domain:", "trust_domain:"]
paths = ["config/*.yaml", "config/*.yml"]
# Allow example.org and test.local domains
allowlist.regexes = [
  '''example\.org''',
  '''test\.local''',
  '''localhost\.local'''
]

[[rules]]
id = "ephemos-socket-paths-production"
description = "Production socket paths"
regex = '''/run/spire/sockets/[a-zA-Z0-9.-]+\.sock'''
keywords = ["socketPath:"]
paths = ["config/*.yaml", "config/*.yml"]
# Allow demo/temp socket paths
allowlist.regexes = ['''/tmp/''']

[[rules]]
id = "ephemos-kubernetes-secrets"
description = "Kubernetes secret references that might be real"
regex = '''name:\s*[a-zA-Z0-9-]+-secret'''
keywords = ["name:", "secretRef:"]
paths = ["config/templates/k8s/*.yaml"]
# Allow template placeholders
allowlist.regexes = [
  '''ephemos-secret''',
  '''<[A-Z_]+>'''
]

[[rules]]
id = "ephemos-base64-secrets"
description = "Base64 encoded values that might be secrets"
regex = '''(?:data:|EPHEMOS_[A-Z_]*:|token:|key:)\s*[A-Za-z0-9+/]{20,}={0,2}'''
keywords = ["data:", "EPHEMOS_", "token:", "key:"]
paths = ["config/**/*.yaml"]
# Allow template placeholders and common Go package patterns
allowlist.regexes = [
  '''<BASE64_ENCODED_[A-Z_]+>''',
  '''BASE64_ENCODED''',
  '''github\.com/[a-zA-Z0-9+/]{20,}''',
  '''google\.golang\.org''',
  '''spiffe/go-spiffe'''
]

# Custom paths to always scan
[extend.paths]
include = [
  "config/",
  "**/*.yaml",
  "**/*.yml", 
  "**/*.env",
  ".env*",
  "**/*.json"
]

# Paths to exclude from scanning
exclude = [
  "**/node_modules/**",
  "**/vendor/**",
  "**/*.pb.go",
  "bin/**",
  ".git/**",
  "**/*_test.go",
  "**/test_*.go",
  "examples/**",
  "docs/**/*.md",
  "*.sum",
  "go.mod",
  "README.md"
]

# Allowlist for false positives
[allowlist]
description = "Allowlist for demo and template values"
commits = []
paths = [
  # Allow all files in examples directory (demo code)
  "examples/",
  "examples/**",
  
  # Allow test files 
  "**/*_test.go",
  "**/test_*.go",
  
  # Allow generated protobuf files
  "**/*.pb.go",
  
  # Allow documentation with code examples
  "docs/**/*.md",
  "README.md",
  "config/README.md"
]
regexes = [
  # Demo values
  "example\\.org",
  "demo-service",
  "test-service",
  "transport-demo", 
  "/tmp/spire-agent/public/api\\.sock",
  
  # Template placeholders
  "<[A-Z_]+>",
  "\\$\\{[A-Z_]+\\}",
  "YOUR_[A-Z_]+",
  "CHANGE_TO_YOUR_[A-Z_]+",
  
  # Common test patterns
  "localhost",
  "127\\.0\\.0\\.1",
  "test\\.local",
  "localhost\\.local",
  
  # Go package paths (may contain long strings that look like secrets)
  "github\\.com/sufield/ephemos",
  "google\\.golang\\.org",
  "github\\.com/spiffe/go-spiffe",
  
  # Transport configuration patterns
  "TransportServer",
  "NewTransportServer", 
  "Mount\\[.*\\]",
  
  # Common Go test patterns
  "testService",
  "TestService",
  "_test\\.go",
  "func Test",
  
  # SPIFFE/SPIRE patterns that are legitimate
  "spiffe://test\\.",
  "spiffe://localhost",
  "spiffe://demo\\.",
  
  # Configuration file comments
  "# Configuration for",
  "# For demo purposes",
  "# This config makes",
  
  # Go module and import patterns
  "module github\\.com",
  "import.*github\\.com",
  "go 1\\.[0-9]+",
  
  # Common Go patterns that might look like base64
  "context\\.Context",
  "error.*fmt\\.Errorf",
  "func.*\\(.*\\)",
  
  # Generic patterns for demo/test data
  "demo.*data",
  "test.*string",
  "example.*value",
  "placeholder.*text",
  
  # Socket and path patterns that are legitimate
  "socket_path:",
  "socketPath:",
  "/tmp/.*\\.sock",
  "/var/.*\\.sock",
  
  # Transport patterns specific to our new code
  "transport.*agnostic",
  "transport.*demo",
  "Mount.*Service"
]