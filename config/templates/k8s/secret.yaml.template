# Kubernetes Secret Template for Ephemos
# IMPORTANT: This is a template file. Create secrets manually, never commit to version control.
#
# Usage:
#   1. Copy this template outside version control
#   2. Replace all placeholder values with base64-encoded actual values
#   3. Apply with: kubectl apply -f secret.yaml
#   4. NEVER commit the actual secret.yaml file
#
# To encode values: echo -n "value" | base64

apiVersion: v1
kind: Secret
metadata:
  name: ephemos-secret
  namespace: production  # Change to your namespace
  labels:
    app: ephemos
    component: secret
type: Opaque
data:
  # Required: Base64-encoded service identity
  # echo -n "payment-service" | base64
  EPHEMOS_SERVICE_NAME: "<BASE64_ENCODED_SERVICE_NAME>"
  
  # Required: Base64-encoded trust domain  
  # echo -n "prod.company.com" | base64
  EPHEMOS_TRUST_DOMAIN: "<BASE64_ENCODED_TRUST_DOMAIN>"
  
  # Optional: Base64-encoded authorized clients (comma-separated)
  # echo -n "spiffe://prod.company.com/api-gateway,spiffe://prod.company.com/billing" | base64
  EPHEMOS_AUTHORIZED_CLIENTS: "<BASE64_ENCODED_AUTHORIZED_CLIENTS>"
  
  # Optional: Base64-encoded trusted servers (comma-separated)
  # echo -n "spiffe://prod.company.com/database,spiffe://prod.company.com/cache" | base64
  EPHEMOS_TRUSTED_SERVERS: "<BASE64_ENCODED_TRUSTED_SERVERS>"

---
# ServiceAccount with minimal permissions
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ephemos-service-account
  namespace: production  # Change to your namespace
  labels:
    app: ephemos
    component: security

---
# Role with minimal required permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ephemos-role
  namespace: production  # Change to your namespace
rules:
# Minimal permissions for service operation
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
  resourceNames: ["ephemos-secret"]  # Restrict to specific secret

---
# RoleBinding to link ServiceAccount with Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ephemos-role-binding
  namespace: production  # Change to your namespace
subjects:
- kind: ServiceAccount
  name: ephemos-service-account
  namespace: production  # Change to your namespace
roleRef:
  kind: Role
  name: ephemos-role
  apiGroup: rbac.authorization.k8s.io

---
# Example Deployment using the secret and configmap
apiVersion: apps/v1
kind: Deployment
metadata:
  name: your-service-deployment  # Change to your service name
  namespace: production  # Change to your namespace
  labels:
    app: your-service  # Change to your service label
spec:
  replicas: 3
  selector:
    matchLabels:
      app: your-service  # Change to your service label
  template:
    metadata:
      labels:
        app: your-service  # Change to your service label
    spec:
      serviceAccountName: ephemos-service-account
      securityContext:
        # Run as non-root for security
        runAsNonRoot: true
        runAsUser: 65534  # nobody
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: your-service  # Change to your service name
        image: your-service:v1.0.0  # Change to your image
        ports:
        - containerPort: 8443
          name: grpc-tls
          protocol: TCP
        securityContext:
          # Enhanced container security
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        # Environment variables from ConfigMap (non-sensitive)
        envFrom:
        - configMapRef:
            name: ephemos-config
        # Environment variables from Secret (sensitive)
        - secretRef:
            name: ephemos-secret
        # Health checks
        livenessProbe:
          grpc:
            port: 8443
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          grpc:
            port: 8443
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        # Resource limits for security and stability
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        # Volume mounts
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      # SPIRE agent socket
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: DirectoryOrCreate
      # Temporary volume for read-only root filesystem
      - name: tmp-volume
        emptyDir: {}