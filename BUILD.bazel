load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/sufield/ephemos
gazelle(name = "gazelle")

# Keep generated BUILD files up to date with gazelle update
gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)

# Format all BUILD files
gazelle(
    name = "gazelle-fix",
    command = "fix",
)

# Test everything
test_suite(
    name = "all_tests",
    tests = [
        "//pkg/ephemos:ephemos_test",
        "//scripts:build_tests",
        "//scripts/ci:ci_tests",
        "//scripts/demo:demo_tests",
        "//scripts/security:security_tests",
        "//scripts/utils:utils_tests",
    ],
)

# Build all binaries
filegroup(
    name = "all_binaries",
    srcs = [
        "//cmd/config-validator",
        "//cmd/ephemos-cli",
        "//examples/echo-client",
        "//examples/echo-server",
    ],
)

# Build and CI script targets
filegroup(
    name = "build_scripts",
    srcs = [
        "//scripts:benchmark",
        "//scripts:check_deps",
        "//scripts:generate_proto",
        "//scripts:lint",
    ],
)

# Security script targets
filegroup(
    name = "security_scripts",
    srcs = [
        "//scripts/security:generate_sbom",
        "//scripts/security:scan_secrets",
        "//scripts/security:scan_vulnerabilities",
        "//scripts/security:security_scan_all",
        "//scripts/security:validate_sbom",
    ],
)

# Demo script targets
filegroup(
    name = "demo_scripts",
    srcs = [
        "//scripts/demo:cleanup",
        "//scripts/demo:full_demo",
        "//scripts/demo:run_demo",
        "//scripts/demo:setup_demo",
    ],
)

# Security analysis
sh_test(
    name = "security_scan",
    srcs = ["tools/security_scan.sh"],
    data = [":all_binaries"],
    tags = ["security"],
)

# Lint check
sh_test(
    name = "lint_check",
    srcs = ["tools/lint_check.sh"],
    tags = ["lint"],
)
